<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-11-10 at 17:38:01.
 */
class Lengow_ConfigurationTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Lengow_Configuration
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Lengow_Configuration;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Lengow_Configuration::get_keys
     */
    public function testGet_keys()
    {
        $this->assertEquals(24, count($this->object->get_keys()));
    }

    /**
     * @covers Lengow_Configuration::get
     */
    public function testGet()
    {
        update_option('lengow_preprod_enabled', true);
        $this->assertEquals(true, $this->object->get('lengow_preprod_enabled'));
        update_option('lengow_preprod_enabled', false);
        $this->assertEquals(false, $this->object->get('lengow_preprod_enabled'));
    }

    /**
     * @covers Lengow_Configuration::add_value
     */
    public function testAdd_value()
    {
        delete_option( 'lengow_test' );
        $this->assertEquals(null, get_option('lengow_test'));
        $this->object->add_value('lengow_test', 'plop');
        $this->assertEquals('plop', get_option('lengow_test'));

        delete_option( 'lengow_test2' );
        $this->assertEquals(null, get_option('lengow_test2'));
        $this->object->add_value('lengow_test2', array('ici' => "4", 'la' => "5"));
        $this->assertEquals(array('ici' => "4", 'la' => "5"), get_option('lengow_test2'));

    }

    /**
     * @covers Lengow_Configuration::update_value
     */
    public function testUpdate_value()
    {
        add_option('lengow_test3', true);
        $this->object->update_value('lengow_test3', 5);
        $this->assertEquals(5, get_option('lengow_test3'));

        add_option('lengow_test4', false);
        $this->object->update_value('lengow_test4', 666);
        $this->assertEquals(666, get_option('lengow_test4'));

    }

    /**
     * @covers Lengow_Configuration::delete
     */
    public function testDelete()
    {
        add_option('lengow_test5', true);
        $this->assertEquals(true, get_option('lengow_test5'));
        $this->object->delete('lengow_test5');
        $this->assertEquals(null, get_option('lengow_test5'));
    }

    /**
     * @covers Lengow_Configuration::get_all_values
     */
    public function testGet_all_values()
    {
        $this->assertEquals(24, count($this->object->get_all_values()));
        $this->assertEquals(10, count($this->object->get_all_values(false)));
        $this->assertEquals(10, count($this->object->get_all_values(false, true)));
    }

    /**
     * @covers Lengow_Configuration::check_and_log
     */
    public function testCheck_and_log()
    {
        update_option('lengow_import_days', 555);
        $this->object->check_and_log('lengow_import_days', 666);
        $fixture = New Fixture();
        $fixture->assertLogContain('[Setting] lengow_import_days - old value 555 replaced with 666');

        update_option('lengow_access_token', '123');
        $this->object->check_and_log('lengow_access_token', '1234');
        $fixture->assertLogContain('[Setting] lengow_access_token - old value *** replaced with ****');
        update_option('lengow_access_token', '1234');

    }
}
