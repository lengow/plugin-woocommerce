<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-10-19 at 16:22:52.
 */
class Lengow_ExportTest extends WP_UnitTestCase
{
    /**
     * @var Lengow_Export
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
        $this->object = new Lengow_Export;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    public function tearDown()
    {
    }

    /**
     * @covers Lengow_Export::get_total_product
     */
    public function testGet_total_product()
    {
        $fixture = New Fixture();
        $fixture->loadProducts('products1.yml');

        $export = new Lengow_Export(array(
            "log_output" => false,
        ));
        $this->assertEquals(7, $export->get_total_product());

        $fixture->loadProducts('products2.yml');

        $export = new Lengow_Export(array(
            "log_output" => false,
        ));
        $this->assertEquals(5, $export->get_total_product());

    }

    /**
     * @covers Lengow_Export::get_total_export_product
     */
    public function testGet_total_export_product()
    {
        $fixture = New Fixture();
        $fixture->loadProducts('products1.yml');

        $export = new Lengow_Export(array(
            "selection" => false,
            "log_output" => false,
            "product_types" => "simple,variable"
        ));

        $this->assertEquals(7, $export->get_total_export_product());

        $export = new Lengow_Export(array(
            "selection" => false,
            "log_output" => false,
            "product_types" => "simple"
        ));
        $this->assertEquals(3, $export->get_total_export_product());

        $fixture->loadProducts('products2.yml');

        $export = new Lengow_Export(array(
            "selection" => true,
            "log_output" => false,
            "product_types" => "simple"
        ));
        $this->assertEquals(1, $export->get_total_export_product());

        $export = new Lengow_Export(array(
            "selection" => true,
            "log_output" => false,
            "product_types" => "simple,variable"
        ));
        $this->assertEquals(3, $export->get_total_export_product());
    }

    /**
     * @covers Lengow_Export::get_export_params
     */
    public function testGet_export_params()
    {
        $export = new Lengow_Export();
        $this->assertEquals("{\"mode\":{\"authorized_values\":[\"size\",\"total\"],\"type\":\"string\",".
        "\"example\":\"size\"},\"format\":{\"authorized_values\":[\"csv\",\"yaml\",\"xml\",\"json\"],\"".
        "type\":\"string\",\"example\":\"csv\"},\"stream\":{\"authorized_values\":[0,1],\"type\":\"integer".
        "\",\"example\":1},\"offset\":{\"authorized_values\":\"all integers\",\"type\":\"integer\",\"example".
        "\":100},\"limit\":{\"authorized_values\":\"all integers\",\"type\":\"integer\",\"example\":100},\"".
        "selection\":{\"authorized_values\":[0,1],\"type\":\"integer\",\"example\":1},\"out_of_stock\":{\"".
        "authorized_values\":[0,1],\"type\":\"integer\",\"example\":1},\"product_ids\":{\"authorized_values\"".
        ":\"all integers\",\"type\":\"string\",\"example\":\"101,108,215\"},\"product_types\":{\"authorized_values".
        "\":[\"simple\",\"variable\",\"external\",\"grouped\"],\"type\":\"string\",\"example\":\"".
        "simple,variable,external,grouped\"},\"variation\":{\"authorized_values\":[0,1],\"type\":\"integer\",".
        "\"example\":1},\"legacy_fields\":{\"authorized_values\":[0,1],\"type\":\"integer\",\"example\":1},\"".
        "log_output\":{\"authorized_values\":[0,1],\"type\":\"integer\",\"example\":1},\"update_export_date\"".
        ":{\"authorized_values\":[0,1],\"type\":\"integer\",\"example\":1},\"get_params\":{\"authorized_values\"".
        ":[0,1],\"type\":\"integer\",\"example\":1}}", $export->get_export_params());
    }
}
